import React, { useState, useEffect, useMemo, useCallback } from 'react';
import { BrowserRouter as Router, Route, Switch, useHistory, useLocation } from 'react-router-dom';
import { Connection, PublicKey, clusterApiUrl } from '@solana/web3.js';
import { AnchorProvider, Program, web3 } from '@project-serum/anchor';
import { WalletAdapterNetwork } from '@solana/wallet-adapter-base';
import { useWallet, WalletProvider } from '@solana/wallet-adapter-react';
import { getPhantomWallet } from '@solana/wallet-adapter-wallets';
import { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';
import { TokenListProvider, TokenInfo } from '@solana/spl-token-registry';
import { useConnection } from '@solana/wallet-adapter-react';
import { useToken } from '../hooks/useToken';
import { useCreateToken } from '../hooks/useCreateToken';
import { useTokenMint } from '../hooks/useTokenMint';
import { useTokenTransfer } from '../hooks/useTokenTransfer';
import { useTokenBurn } from '../hooks/useTokenBurn';
import { useTokenFreeze } from '../hooks/useTokenFreeze';
import { useTokenThaw } from '../hooks/useTokenThaw';
import { useTokenAccount } from '../hooks/useTokenAccount';
import { useTokenMetadata } from '../hooks/useTokenMetadata';
import { useTokenSupply } from '../hooks/useTokenSupply';
import { useTokenApprove } from '../hooks/useTokenApprove';
import { useTokenRevoke } from '../hooks/useTokenRevoke';
import { useTokenCloseAccount } from '../hooks/useTokenCloseAccount';
import { useTokenSetAuthority } from '../hooks/useTokenSetAuthority';
import { useTokenGetAccountInfo } from '../hooks/useTokenGetAccountInfo';
import { useTokenGetMintInfo } from '../hooks/useTokenGetMintInfo';
import { useTokenGetSupply } from '../hooks/useTokenGetSupply';
import { useTokenGetTokenAccountsByOwner } from '../hooks/useTokenGetTokenAccountsByOwner';
import { useTokenGetTokenAccountsByDelegate } from '../hooks/useTokenGetTokenAccountsByDelegate';
import { useTokenGetTokenAccountsByMint } from '../hooks/useTokenGetTokenAccountsByMint';
import { useTokenGetTokenAccountsByProgramId } from '../hooks/useTokenGetTokenAccountsByProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddress } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddress';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMint } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMint';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithOwner } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithOwner';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithDelegate } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithDelegate';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwner } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwner';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndDelegate } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndDelegate';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndDelegate } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndDelegate';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithDelegateAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithDelegateAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegate } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegate';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndDelegateAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndDelegateAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndDelegateAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithOwnerAndDelegateAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramId } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramId';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadata } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadata';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEdition } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEdition';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEdition } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEdition';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollection } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollection';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreator } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreator';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethod } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethod';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfig } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfig';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSet } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSet';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRule } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRule';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSet } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSet';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRule } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRule';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthority';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSet } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSet';
import { useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetRuleSetAuthority } from '../hooks/useTokenGetTokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetRuleSetAuthority';

import Navbar from './components/Navbar';
import TokenCreationForm from './components/TokenCreationForm';
import TokenManagement from './components/TokenManagement';
import TokenTransfer from './components/TokenTransfer';
import TokenBurn from './components/TokenBurn';
import TokenFreeze from './components/TokenFreeze';
import TokenThaw from './components/TokenThaw';
import TokenSupply from './components/TokenSupply';
import TokenApprove from './components/TokenApprove';
import TokenRevoke from './components/TokenRevoke';
import TokenCloseAccount from './components/TokenCloseAccount';
import TokenSetAuthority from './components/TokenSetAuthority';
import TokenAccountInfo from './components/TokenAccountInfo';
import TokenMintInfo from './components/TokenMintInfo';
import TokenSupplyInfo from './components/TokenSupplyInfo';
import TokenAccountsByOwner from './components/TokenAccountsByOwner';
import TokenAccountsByDelegate from './components/TokenAccountsByDelegate';
import TokenAccountsByMint from './components/TokenAccountsByMint';
import TokenAccountsByProgramId from './components/TokenAccountsByProgramId';
import TokenAccountsByAssociatedTokenAddress from './components/TokenAccountsByAssociatedTokenAddress';
import TokenAccountsByAssociatedTokenAddressWithMint from './components/TokenAccountsByAssociatedTokenAddressWithMint';
import TokenAccountsByAssociatedTokenAddressWithOwner from './components/TokenAccountsByAssociatedTokenAddressWithOwner';
import TokenAccountsByAssociatedTokenAddressWithDelegate from './components/TokenAccountsByAssociatedTokenAddressWithDelegate';
import TokenAccountsByAssociatedTokenAddressWithProgramId from './components/TokenAccountsByAssociatedTokenAddressWithProgramId';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwner from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwner';
import TokenAccountsByAssociatedTokenAddressWithMintAndDelegate from './components/TokenAccountsByAssociatedTokenAddressWithMintAndDelegate';
import TokenAccountsByAssociatedTokenAddressWithMintAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithMintAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegate from './components/TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegate';
import TokenAccountsByAssociatedTokenAddressWithOwnerAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithOwnerAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithDelegateAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithDelegateAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegate from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegate';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithMintAndDelegateAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithMintAndDelegateAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegateAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegateAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramId from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramId';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadata from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadata';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEdition from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEdition';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEdition from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEdition';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollection from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollection';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreator from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreator';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethod from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethod';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfig from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfig';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSet from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSet';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRule from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRule';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSet from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSet';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRule from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRule';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthority';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSet from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSet';
import TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetRuleSetAuthority from './components/TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollectionAndCreatorAndUseMethodAndProgrammableConfigAndProgrammableConfigAuthorityAndProgrammableConfigRuleSetAndProgrammableConfigRuleSetAuthorityAndProgrammableConfigRuleSetRuleAndProgrammableConfigRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetAuthorityAndProgrammableConfigRuleSetRuleSetRuleAndProgrammableConfigRuleSetRuleSetRuleAuthorityAndProgrammableConfigRuleSetRuleSetRuleSetAndProgrammableConfigRuleSetRuleSetRuleSetAuthority';

require('@solana/wallet-adapter-react-ui/styles.css');

const App = () => {
  const network = WalletAdapterNetwork.Devnet;
  const endpoint = useMemo(() => clusterApiUrl(network), [network]);
  const wallets = useMemo(() => [getPhantomWallet()], []);

  const [connection, setConnection] = useState(new Connection(endpoint, 'confirmed'));
  const [provider, setProvider] = useState(null);
  const [program, setProgram] = useState(null);
  const [tokenList, setTokenList] = useState([]);

  const { publicKey, sendTransaction, wallet, signTransaction, signAllTransactions } = useWallet();
  const { connection: solanaConnection } = useConnection();

  useEffect(() => {
    const initProvider = async () => {
      if (publicKey && wallet) {
        const provider = new AnchorProvider(
          connection,
          {
            publicKey: publicKey,
            signTransaction: signTransaction,
            signAllTransactions: signAllTransactions,
          },
          {
            preflightCommitment: 'confirmed',
            commitment: 'confirmed',
          }
        );
        setProvider(provider);

        const idl = await Program.fetchIdl(new PublicKey('YourProgramIDHere'), provider);
        const program = new Program(idl, new PublicKey('YourProgramIDHere'), provider);
        setProgram(program);
      }
    };
    initProvider();
  }, [publicKey, wallet, connection]);

  useEffect(() => {
    const fetchTokenList = async () => {
      try {
        const response = await fetch('https://raw.githubusercontent.com/solana-labs/token-list/main/src/tokens/solana.tokenlist.json');
        const data = await response.json();
        setTokenList(data.tokens);
      } catch (error) {
        console.error('Failed to fetch token list:', error);
      }
    };
    fetchTokenList();
  }, []);

  const history = useHistory();
  const location = useLocation();

  const handleTokenCreation = useCallback(async (tokenData) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const [mintAuthority, mintAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('mint_authority'), publicKey.toBuffer()],
        program.programId
      );

      const [freezeAuthority, freezeAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('freeze_authority'), publicKey.toBuffer()],
        program.programId
      );

      const mint = web3.Keypair.generate();
      const tokenAccount = await web3.Token.getAssociatedTokenAddress(
        web3.ASSOCIATED_TOKEN_PROGRAM_ID,
        web3.TOKEN_PROGRAM_ID,
        mint.publicKey,
        publicKey
      );

      const transaction = new web3.Transaction().add(
        web3.SystemProgram.createAccount({
          fromPubkey: publicKey,
          newAccountPubkey: mint.publicKey,
          lamports: await connection.getMinimumBalanceForRentExemption(web3.MintLayout.span),
          space: web3.MintLayout.span,
          programId: web3.TOKEN_PROGRAM_ID,
        }),
        web3.Token.createInitMintInstruction(
          web3.TOKEN_PROGRAM_ID,
          mint.publicKey,
          9,
          mintAuthority,
          freezeAuthority
        ),
        web3.Token.createAssociatedTokenAccountInstruction(
          web3.ASSOCIATED_TOKEN_PROGRAM_ID,
          web3.TOKEN_PROGRAM_ID,
          mint.publicKey,
          tokenAccount,
          publicKey,
          publicKey
        ),
        web3.Token.createMintToInstruction(
          web3.TOKEN_PROGRAM_ID,
          mint.publicKey,
          tokenAccount,
          mintAuthority,
          [],
          1_000_000_000
        )
      );

      const signature = await sendTransaction(transaction, connection, { signers: [mint] });
      await connection.confirmTransaction(signature, 'confirmed');

      const metadataAddress = await web3.Metadata.getPDA(mint.publicKey);
      const masterEditionAddress = await web3.Metadata.getMasterEdition(mint.publicKey);

      const metadataTransaction = new web3.Transaction().add(
        web3.MetadataProgram.createMetadataAccountV2({
          metadata: metadataAddress,
          mint: mint.publicKey,
          mintAuthority: mintAuthority,
          payer: publicKey,
          updateAuthority: publicKey,
          data: {
            name: tokenData.name,
            symbol: tokenData.symbol,
            uri: tokenData.uri,
            sellerFeeBasisPoints: 0,
            creators: null,
            collection: null,
            uses: null,
          },
          isMutable: true,
        }),
        web3.MetadataProgram.createMasterEditionV3({
          edition: masterEditionAddress,
          mint: mint.publicKey,
          updateAuthority: publicKey,
          mintAuthority: mintAuthority,
          payer: publicKey,
          maxSupply: new web3.BigNumber(0),
        })
      );

      const metadataSignature = await sendTransaction(metadataTransaction, connection);
      await connection.confirmTransaction(metadataSignature, 'confirmed');

      console.log('Token created successfully:', mint.publicKey.toBase58());
      history.push('/token-management');
    } catch (error) {
      console.error('Error creating token:', error);
    }
  }, [program, publicKey, connection, sendTransaction, history]);

  const handleTokenTransfer = useCallback(async (tokenAddress, recipientAddress, amount) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const token = new web3.Token(connection, new web3.PublicKey(tokenAddress), web3.TOKEN_PROGRAM_ID, wallet.adapter);
      const fromTokenAccount = await token.getOrCreateAssociatedAccountInfo(publicKey);
      const toTokenAccount = await token.getOrCreateAssociatedAccountInfo(new web3.PublicKey(recipientAddress));

      const transaction = new web3.Transaction().add(
        web3.Token.createTransferInstruction(
          web3.TOKEN_PROGRAM_ID,
          fromTokenAccount.address,
          toTokenAccount.address,
          publicKey,
          [],
          amount
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token transferred successfully:', signature);
    } catch (error) {
      console.error('Error transferring token:', error);
    }
  }, [program, publicKey, connection, sendTransaction, wallet]);

  const handleTokenBurn = useCallback(async (tokenAddress, amount) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const token = new web3.Token(connection, new web3.PublicKey(tokenAddress), web3.TOKEN_PROGRAM_ID, wallet.adapter);
      const fromTokenAccount = await token.getOrCreateAssociatedAccountInfo(publicKey);

      const transaction = new web3.Transaction().add(
        web3.Token.createBurnInstruction(
          web3.TOKEN_PROGRAM_ID,
          fromTokenAccount.address,
          new web3.PublicKey(tokenAddress),
          publicKey,
          [],
          amount
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token burned successfully:', signature);
    } catch (error) {
      console.error('Error burning token:', error);
    }
  }, [program, publicKey, connection, sendTransaction, wallet]);

  const handleTokenFreeze = useCallback(async (tokenAddress, accountAddress) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const [freezeAuthority, freezeAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('freeze_authority'), publicKey.toBuffer()],
        program.programId
      );

      const transaction = new web3.Transaction().add(
        web3.Token.createFreezeAccountInstruction(
          web3.TOKEN_PROGRAM_ID,
          new web3.PublicKey(accountAddress),
          new web3.PublicKey(tokenAddress),
          freezeAuthority,
          publicKey,
          []
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token account frozen successfully:', signature);
    } catch (error) {
      console.error('Error freezing token account:', error);
    }
  }, [program, publicKey, connection, sendTransaction]);

  const handleTokenThaw = useCallback(async (tokenAddress, accountAddress) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const [freezeAuthority, freezeAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('freeze_authority'), publicKey.toBuffer()],
        program.programId
      );

      const transaction = new web3.Transaction().add(
        web3.Token.createThawAccountInstruction(
          web3.TOKEN_PROGRAM_ID,
          new web3.PublicKey(accountAddress),
          new web3.PublicKey(tokenAddress),
          freezeAuthority,
          publicKey,
          []
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token account thawed successfully:', signature);
    } catch (error) {
      console.error('Error thawing token account:', error);
    }
  }, [program, publicKey, connection, sendTransaction]);

  const handleTokenApprove = useCallback(async (tokenAddress, delegateAddress, amount) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const token = new web3.Token(connection, new web3.PublicKey(tokenAddress), web3.TOKEN_PROGRAM_ID, wallet.adapter);
      const fromTokenAccount = await token.getOrCreateAssociatedAccountInfo(publicKey);

      const transaction = new web3.Transaction().add(
        web3.Token.createApproveInstruction(
          web3.TOKEN_PROGRAM_ID,
          fromTokenAccount.address,
          new web3.PublicKey(delegateAddress),
          publicKey,
          [],
          amount
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token approval successful:', signature);
    } catch (error) {
      console.error('Error approving token:', error);
    }
  }, [program, publicKey, connection, sendTransaction, wallet]);

  const handleTokenRevoke = useCallback(async (tokenAddress, delegateAddress) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const token = new web3.Token(connection, new web3.PublicKey(tokenAddress), web3.TOKEN_PROGRAM_ID, wallet.adapter);
      const fromTokenAccount = await token.getOrCreateAssociatedAccountInfo(publicKey);

      const transaction = new web3.Transaction().add(
        web3.Token.createRevokeInstruction(
          web3.TOKEN_PROGRAM_ID,
          fromTokenAccount.address,
          publicKey,
          []
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token revocation successful:', signature);
    } catch (error) {
      console.error('Error revoking token:', error);
    }
  }, [program, publicKey, connection, sendTransaction, wallet]);

  const handleTokenCloseAccount = useCallback(async (tokenAddress, accountAddress) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const transaction = new web3.Transaction().add(
        web3.Token.createCloseAccountInstruction(
          web3.TOKEN_PROGRAM_ID,
          new web3.PublicKey(accountAddress),
          publicKey,
          publicKey,
          []
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token account closed successfully:', signature);
    } catch (error) {
      console.error('Error closing token account:', error);
    }
  }, [program, publicKey, connection, sendTransaction]);

  const handleTokenSetAuthority = useCallback(async (tokenAddress, newAuthorityAddress, authorityType) => {
    try {
      if (!program || !publicKey) {
        throw new Error('Program or wallet not initialized');
      }

      const [mintAuthority, mintAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('mint_authority'), publicKey.toBuffer()],
        program.programId
      );

      const [freezeAuthority, freezeAuthorityBump] = await web3.PublicKey.findProgramAddress(
        [Buffer.from('freeze_authority'), publicKey.toBuffer()],
        program.programId
      );

      const transaction = new web3.Transaction().add(
        web3.Token.createSetAuthorityInstruction(
          web3.TOKEN_PROGRAM_ID,
          new web3.PublicKey(tokenAddress),
          authorityType === 'mint' ? mintAuthority : freezeAuthority,
          new web3.PublicKey(newAuthorityAddress),
          authorityType === 'mint' ? web3.AuthorityType.MintTokens : web3.AuthorityType.FreezeAccount,
          publicKey,
          []
        )
      );

      const signature = await sendTransaction(transaction, connection);
      await connection.confirmTransaction(signature, 'confirmed');

      console.log('Token authority set successfully:', signature);
    } catch (error) {
      console.error('Error setting token authority:', error);
    }
  }, [program, publicKey, connection, sendTransaction]);

  return (
    <Router>
      <WalletProvider wallets={wallets} autoConnect>
        <WalletModalProvider>
          <TokenListProvider>
            <div className="App">
              <Navbar />
              <Switch>
                <Route exact path="/">
                  <TokenCreationForm onTokenCreation={handleTokenCreation} />
                </Route>
                <Route path="/token-management">
                  <TokenManagement />
                </Route>
                <Route path="/token-transfer">
                  <TokenTransfer onTokenTransfer={handleTokenTransfer} />
                </Route>
                <Route path="/token-burn">
                  <TokenBurn onTokenBurn={handleTokenBurn} />
                </Route>
                <Route path="/token-freeze">
                  <TokenFreeze onTokenFreeze={handleTokenFreeze} />
                </Route>
                <Route path="/token-thaw">
                  <TokenThaw onTokenThaw={handleTokenThaw} />
                </Route>
                <Route path="/token-supply">
                  <TokenSupply />
                </Route>
                <Route path="/token-approve">
                  <TokenApprove onTokenApprove={handleTokenApprove} />
                </Route>
                <Route path="/token-revoke">
                  <TokenRevoke onTokenRevoke={handleTokenRevoke} />
                </Route>
                <Route path="/token-close-account">
                  <TokenCloseAccount onTokenCloseAccount={handleTokenCloseAccount} />
                </Route>
                <Route path="/token-set-authority">
                  <TokenSetAuthority onTokenSetAuthority={handleTokenSetAuthority} />
                </Route>
                <Route path="/token-account-info">
                  <TokenAccountInfo />
                </Route>
                <Route path="/token-mint-info">
                  <TokenMintInfo />
                </Route>
                <Route path="/token-supply-info">
                  <TokenSupplyInfo />
                </Route>
                <Route path="/token-accounts-by-owner">
                  <TokenAccountsByOwner />
                </Route>
                <Route path="/token-accounts-by-delegate">
                  <TokenAccountsByDelegate />
                </Route>
                <Route path="/token-accounts-by-mint">
                  <TokenAccountsByMint />
                </Route>
                <Route path="/token-accounts-by-program-id">
                  <TokenAccountsByProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address">
                  <TokenAccountsByAssociatedTokenAddress />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint">
                  <TokenAccountsByAssociatedTokenAddressWithMint />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-owner">
                  <TokenAccountsByAssociatedTokenAddressWithOwner />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-delegate">
                  <TokenAccountsByAssociatedTokenAddressWithDelegate />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwner />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-delegate">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndDelegate />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-owner-and-delegate">
                  <TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegate />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-owner-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithOwnerAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-delegate-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithDelegateAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegate />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-delegate-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndDelegateAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-owner-and-delegate-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithOwnerAndDelegateAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramId />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthority />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthority />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthority />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthority />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority-and-metadata">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadata />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority-and-metadata-and-master-edition">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEdition />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority-and-metadata-and-master-edition-and-edition">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEdition />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority-and-metadata-and-master-edition-and-edition-and-use-authority">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthority />
                </Route>
                <Route path="/token-accounts-by-associated-token-address-with-mint-and-owner-and-delegate-and-program-id-and-authority-and-close-authority-and-freeze-authority-and-mint-authority-and-metadata-and-master-edition-and-edition-and-use-authority-and-collection">
                  <TokenAccountsByAssociatedTokenAddressWithMintAndOwnerAndDelegateAndProgramIdAndAuthorityAndCloseAuthorityAndFreezeAuthorityAndMintAuthorityAndMetadataAndMasterEditionAndEditionAndUseAuthorityAndCollection />
                </Route>
              </Switch>
            </div>
          </TokenListProvider>
        </WalletModalProvider>
      </WalletProvider>
    </Router>
  );
};

export default App;